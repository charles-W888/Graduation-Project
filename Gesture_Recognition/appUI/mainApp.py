# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainApp.ui'
#
# Created by: PyQt5 UI code generator 5.14.1
#
# WARNING! All changes made in this file will be lost!


import gesture_rec
import cv2
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def __init__(self):
        self.timer_camera = QtCore.QTimer()
        self.camera = cv2.VideoCapture(0)
        self.timer_camera.timeout.connect(self.show_cam)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 690)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setEnabled(True)
        self.stackedWidget.setGeometry(QtCore.QRect(0, 40, 1000, 611))
        self.stackedWidget.setObjectName("stackedWidget")
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.label_2 = QtWidgets.QLabel(self.page)
        self.label_2.setGeometry(QtCore.QRect(30, 70, 451, 491))
        self.label_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.label_2.setScaledContents(True)
        self.label_3 = QtWidgets.QLabel(self.page)
        self.label_3.setGeometry(QtCore.QRect(520, 70, 451, 491))
        self.label_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_3.setText("")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.page)
        self.label_4.setGeometry(QtCore.QRect(113, 20, 231, 21))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.page)
        self.label_5.setGeometry(QtCore.QRect(630, 20, 231, 21))
        self.label_5.setObjectName("label_5")
        self.stackedWidget.addWidget(self.page)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.label_6 = QtWidgets.QLabel(self.page_2)
        self.label_6.setGeometry(QtCore.QRect(30, 60, 451, 491))
        self.label_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_6.setText("")
        self.label_6.setObjectName("label_6")
        self.lcdNumber = QtWidgets.QLCDNumber(self.page_2)
        self.lcdNumber.setGeometry(QtCore.QRect(793, 50, 101, 41))
        self.lcdNumber.setObjectName("lcdNumber")
        self.label_7 = QtWidgets.QLabel(self.page_2)
        self.label_7.setGeometry(QtCore.QRect(703, 60, 81, 21))
        font = QtGui.QFont()
        font.setFamily("System")
        font.setPointSize(10)
        self.label_7.setFont(font)
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.stackedWidget.addWidget(self.page_2)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(920, 0, 80, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft Tai Le")
        self.pushButton.setFont(font)
        self.pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton.setObjectName("pushButton")
        # self.pushButton.clicked.connect(self.open_video)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(809, 0, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Georgia")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label.setTextFormat(QtCore.Qt.AutoText)
        self.label.setScaledContents(False)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(720, 10, 75, 23))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.open_video)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1000, 23))
        self.menubar.setObjectName("menubar")
        self.menuFile_F = QtWidgets.QMenu(self.menubar)
        self.menuFile_F.setObjectName("menuFile_F")
        self.menuGames_G = QtWidgets.QMenu(self.menubar)
        self.menuGames_G.setObjectName("menuGames_G")
        self.menuHelp_H = QtWidgets.QMenu(self.menubar)
        self.menuHelp_H.setObjectName("menuHelp_H")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionView_History_V = QtWidgets.QAction(MainWindow)
        self.actionView_History_V.setObjectName("actionView_History_V")
        self.actionSettings_S = QtWidgets.QAction(MainWindow)
        self.actionSettings_S.setObjectName("actionSettings_S")
        self.actionExit_X = QtWidgets.QAction(MainWindow)
        self.actionExit_X.setObjectName("actionExit_X")
        self.actionRock_Paper_Scissors_R = QtWidgets.QAction(MainWindow)
        self.actionRock_Paper_Scissors_R.setObjectName("actionRock_Paper_Scissors_R")
        self.actionoperation_instructions_O = QtWidgets.QAction(MainWindow)
        self.actionoperation_instructions_O.setObjectName("actionoperation_instructions_O")
        self.menuFile_F.addAction(self.actionView_History_V)
        self.menuFile_F.addAction(self.actionSettings_S)
        self.menuFile_F.addSeparator()
        self.menuFile_F.addAction(self.actionExit_X)
        self.menuGames_G.addAction(self.actionRock_Paper_Scissors_R)
        self.menuHelp_H.addAction(self.actionoperation_instructions_O)
        self.menubar.addAction(self.menuFile_F.menuAction())
        self.menubar.addAction(self.menuGames_G.menuAction())
        self.menubar.addAction(self.menuHelp_H.menuAction())

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "HANKit-EveryNontouch"))
        self.label_4.setText(_translate("MainWindow", "Please put your hand to this windows"))
        self.label_5.setText(_translate("MainWindow", "Please put your hand to this windows"))
        self.label_7.setText(_translate("MainWindow", "Your Score"))
        self.pushButton.setText(_translate("MainWindow", "Log in"))
        self.label.setText(_translate("MainWindow", "Username"))
        self.pushButton_2.setText(_translate("MainWindow", "Close"))
        self.menuFile_F.setTitle(_translate("MainWindow", "File(&F)"))
        self.menuGames_G.setTitle(_translate("MainWindow", "Games(&G)"))
        self.menuHelp_H.setTitle(_translate("MainWindow", "Help(&H)"))
        self.actionView_History_V.setText(_translate("MainWindow", "View History(&V)"))
        self.actionSettings_S.setText(_translate("MainWindow", "Settings(&S)"))
        self.actionExit_X.setText(_translate("MainWindow", "Exit(&X)"))
        self.actionRock_Paper_Scissors_R.setText(_translate("MainWindow", "Rock Paper Scissors(&R)"))
        self.actionoperation_instructions_O.setText(_translate("MainWindow", "operation instructions(&O)"))

    def show_cam(self):
        gest_rec = gesture_rec.GestureRecognition(self.camera)
        gest_rec.run()
        _, self._frame = self.camera.read()
        show = cv2.cvtColor(self._frame, cv2.COLOR_BGR2RGB)
        showImg = QtGui.QImage(show.data, show.shape[1], show.shape[0], QtGui.QImage.Format_RGB888)
        self.label_2.setPixmap(QtGui.QPixmap.fromImage(showImg))

    def open_video(self):
        if self.timer_camera.isActive() == False:

            if self.camera == False:
                msg = QtWidgets.QMessageBox.warning(self, 'warning!', 'Please check your computer camera', buttons=QtWidgets.QMessageBox.Ok)
            else:
                self.timer_camera.start(10)
                self.pushButton_2.setText('Close')

        else:
            self.timer_camera.stop()
            self.cap.release()
            self.label_2.clear()
            self.pushButton_2.setText('Open')
